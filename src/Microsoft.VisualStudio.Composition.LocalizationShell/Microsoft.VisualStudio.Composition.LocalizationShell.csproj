<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <!-- This project doesn't ship. But because the latest MAT tool doesn't support net45 targeting .NET SDK projects,
         we have to maintain this shell project that targets netstandard so that MAT works. Then we steal the resulting
         resources in the original shipping project. -->
    <TargetFramework>netstandard1.0</TargetFramework>
    <RootNamespace>Microsoft.VisualStudio.Composition</RootNamespace>
    <IsPackable>false</IsPackable>
    <CodeAnalysisRuleSet>$(MSBuildProjectName).ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Label="MultilingualAppToolkit">
    <MultilingualAppToolkitVersion>4.0</MultilingualAppToolkitVersion>
    <MultilingualFallbackLanguage>en-US</MultilingualFallbackLanguage>
    <TranslationReport Condition="'$(Configuration)' == 'Release'">true</TranslationReport>
    <SuppressPseudoWarning Condition="'$(Configuration)' == 'Debug'">true</SuppressPseudoWarning>
  </PropertyGroup>
  <ItemGroup>
    <XliffResource Include="MultilingualResources\*.xlf" />
  </ItemGroup>
  <ItemGroup>
    <Compile Update="Strings.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Strings.resx</DependentUpon>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="MicroBuild.NonShipping" Version="$(MicroBuildVersion)" PrivateAssets="all" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Update="Strings.*.resx">
      <Generator>ResXFileCodeGenerator</Generator>
    </EmbeddedResource>
    <EmbeddedResource Update="Strings.resx">
      <LastGenOutput>Strings.Designer.cs</LastGenOutput>
      <Generator>ResXFileCodeGenerator</Generator>
    </EmbeddedResource>
  </ItemGroup>
  <Import Project="$(MSBuildExtensionsPath)\Microsoft\Multilingual App Toolkit\Microsoft.Multilingual.ResxResources.targets" Label="MultilingualAppToolkit" Condition="Exists('$(MSBuildExtensionsPath)\Microsoft\Multilingual App Toolkit\v$(MultilingualAppToolkitVersion)\Microsoft.Multilingual.ResxResources.targets')" />
  <Target Name="MATPrerequisite" BeforeTargets="PrepareForBuild" Condition="!Exists('$(MSBuildExtensionsPath)\Microsoft\Multilingual App Toolkit\Microsoft.Multilingual.ResxResources.targets')" Label="MultilingualAppToolkit">
    <Warning Text="$(MSBuildProjectFile) is Multilingual build enabled, but the Multilingual App Toolkit is unavailable during the build. If building with Visual Studio, please check to ensure that toolkit is properly installed." />
  </Target>
</Project>
